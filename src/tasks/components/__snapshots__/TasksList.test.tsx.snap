// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TasksList rendering renders 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="resource-list"
      >
        <div
          class="resource-list--header"
        >
          <div
            class="resource-list--filter"
          />
          <div
            class="resource-list--sorting"
          >
            <div
              class="resource-list--sorter"
              title="Sort Name in asc order"
            >
              Name
            </div>
            <div
              class="resource-list--sorter"
              title="Sort Active in asc order"
            >
              Active
            </div>
            <div
              class="resource-list--sorter"
              title="Sort Schedule in asc order"
            >
              Schedule
            </div>
            <div
              class="resource-list--sorter"
              title="Sort Last Completed in asc order"
            >
              Last Completed
            </div>
          </div>
        </div>
        <div
          class="resource-list--body"
        >
          <div
            class="empty-state empty-state--lg"
            data-testid="empty-state"
          >
            <h4
              class="empty-state--text"
              data-testid="empty-state--text"
            >
              Looks 
              like 
              you 
              don't 
              have 
              any 
              <em>
                Tasks
              </em>
              , 
              why 
              not 
              create 
              one? 
            </h4>
            <div
              class="dropdown dropdown-sm dropdown-primary dropdown-truncate dropdown--action"
              style="width: 160px;"
            >
              <button
                class="dropdown--button button button-stretch button-primary button-sm"
                data-testid="dropdown-button"
                title="Create Task"
                type="button"
              >
                <span
                  class="dropdown--icon icon plus"
                />
                <span
                  class="dropdown--selected"
                >
                  Create Task
                </span>
                <span
                  class="dropdown--caret icon caret-down"
                />
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="resource-list"
    >
      <div
        class="resource-list--header"
      >
        <div
          class="resource-list--filter"
        />
        <div
          class="resource-list--sorting"
        >
          <div
            class="resource-list--sorter"
            title="Sort Name in asc order"
          >
            Name
          </div>
          <div
            class="resource-list--sorter"
            title="Sort Active in asc order"
          >
            Active
          </div>
          <div
            class="resource-list--sorter"
            title="Sort Schedule in asc order"
          >
            Schedule
          </div>
          <div
            class="resource-list--sorter"
            title="Sort Last Completed in asc order"
          >
            Last Completed
          </div>
        </div>
      </div>
      <div
        class="resource-list--body"
      >
        <div
          class="empty-state empty-state--lg"
          data-testid="empty-state"
        >
          <h4
            class="empty-state--text"
            data-testid="empty-state--text"
          >
            Looks 
            like 
            you 
            don't 
            have 
            any 
            <em>
              Tasks
            </em>
            , 
            why 
            not 
            create 
            one? 
          </h4>
          <div
            class="dropdown dropdown-sm dropdown-primary dropdown-truncate dropdown--action"
            style="width: 160px;"
          >
            <button
              class="dropdown--button button button-stretch button-primary button-sm"
              data-testid="dropdown-button"
              title="Create Task"
              type="button"
            >
              <span
                class="dropdown--icon icon plus"
              />
              <span
                class="dropdown--selected"
              >
                Create Task
              </span>
              <span
                class="dropdown--caret icon caret-down"
              />
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllBySelectText": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getAllByValue": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getBySelectText": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "getByValue": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllBySelectText": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryAllByValue": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryBySelectText": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "queryByValue": [Function],
  "rerender": [Function],
  "store": Object {
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
    Symbol(observable): [Function],
  },
  "unmount": [Function],
}
`;
